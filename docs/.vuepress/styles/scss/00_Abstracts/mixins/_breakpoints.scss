@import '../variables';

/*
    BREAKPOINT ABOVE

    Usage:
        @include breakpoint-above(sm) {}
*/
@mixin breakpoint-above($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @media (min-width: $breakpoint-value) {
            @content;
        }
    }
    @else {
        @error "Invalid breakpoint: '#{$breakpoint}'.";
    }
}

    

/*
    BREAKPOINT BELOW

    Usage:
        @include breakpoint-below(sm) {}
*/
@mixin breakpoint-below($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @media (max-width: ($breakpoint-value - 1)) {
            @content;
        }
    }
    @else {
        @error "Invalid breakpoint: '#{$breakpoint}'.";
    }
}

    

/*
    BREAKPOINT BETWEEN

    Usage:
        @include breakpoint-between(sm, md) {}
*/
@mixin breakpoint-between($lower, $upper) {
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);

        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
            @content;
        }
    }
    @else {
        @if (map-has-key($breakpoints, $lower)==false) {
            @error 'Your lower breakpoint was invalid: #{$lower}.';
        }

        @if (map-has-key($breakpoints, $upper)==false) {
            @error 'Your upper breakpoint was invalid: #{$upper}.';
        }
    }
}
